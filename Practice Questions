The dictionary Junior shows a schedule for a junior year semester. The key is the course name and the value is the number of credits. 
Find the total number of credits taken this semester and assign it to the variable credits. Do not hardcode this – use dictionary accumulation!

Junior = {'SI 206':4, 'SI 310':4, 'BL 300':3, 'TO 313':3, 'BCOM 350':1, 'MO 300':3}
credits = 0
for n in Junior.values():
    credits = credits + n


Create the dictionary characters that shows each character from the string sally and its frequency. 
Then, find the most frequent letter based on the dictionary. Assign this letter to the variable best_char.
sally = "sally sells sea shells by the sea shore"
characters = {}
for n in sally:
    if n in characters:
        characters[n]+= 1
    else:
        characters[n]=1
print(characters)
best_char = sorted(characters.items(), key=lambda x: x[1])[-1][0]

Write a function called change that takes any string, adds “Nice to meet you!” to the end of the argument given, and returns that new string.

def change(x):
    go = x + "Nice to meet you!"
    return go

Write a function, accum, that takes a list of integers as input and returns the sum of those integers.

def accum(x):
    return sum(x)
    
Create a class called Animal that accepts two numbers as inputs and assigns them respectively to two instance variables: arms and legs. Create an instance method called limbs that, when called, returns the total number of limbs the animal has. To the variable name spider, assign an instance of Animal that has 4 arms and 4 legs. 
Call the limbs method on the spider instance and save the result to the variable name spidlimbs.

class Animal():
    def __init__ (self, arms, legs):
        self.arms = arms
        self.legs = legs
    def limbs(self):
        return self.arms + self.legs

spider = Animal(4, 4)
spidlimbs = spider.limbs()


Below, we have provided code that does not run. Add a try/except clause so the code runs without errors. 
If an element is not able to undergo the addition operation, the string ‘Error’ should be appended to plus_four.



nums = [5, 9, '4', 3, 2, 1, 6, 5, '7', 4, 3, 2, 6, 7, 8, '0', 3, 4, 0, 6, 5, '3', 5, 6, 7, 8, '3', '1', 5, 6, 7, 9, 3, 2, 5, 6, '9', 2, 3, 4, 5, 1]

plus_four = []

for num in nums:
    try:
        plus_four.append(num+4)
    except Exception:
        plus_four.append('Error')


